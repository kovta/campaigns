plugins {
    id 'io.micronaut.application' version '1.0.5'
    id 'org.openapi.generator' version '4.3.1'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'com.diffplug.spotless' version "5.7.0"
}

version "0.1"
group "com.kota"

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

micronaut {
    runtime "netty"
    testRuntime "junit5"
    processing {
        incremental true
        annotations "com.kota.campaigns.service.*"
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor 'io.micronaut.openapi:micronaut-openapi'
    annotationProcessor 'io.micronaut:micronaut-inject-java'

    implementation 'io.swagger.core.v3:swagger-annotations'
    implementation 'com.agorapulse:micronaut-bigquery:0.2.5'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'io.micronaut:micronaut-runtime'
    implementation 'io.micronaut:micronaut-inject'
    implementation 'io.micronaut:micronaut-http-client'

    implementation 'javax.annotation:javax.annotation-api'
    implementation 'com.google.cloud:google-cloud-bigquery:1.123.2'

    compileOnly 'org.graalvm.nativeimage:svm'
    runtimeOnly 'ch.qos.logback:logback-classic'

    testImplementation 'com.agorapulse:micronaut-bigquery-mock:0.2.5'
    testImplementation 'io.micronaut.sql:micronaut-jdbc-tomcat:3.2.0'
    testImplementation 'io.micronaut.configuration:jdbc-tomcat:1.0.0.RC2'
    testImplementation 'org.postgresql:postgresql:42.2.9'
    testImplementation 'org.testcontainers:spock:1.15.0-rc2'
    testImplementation 'org.testcontainers:postgresql:1.15.0-rc2'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.0-rc2'
    testImplementation "org.mockito:mockito-junit-jupiter:2.22.0"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

test {
    useJUnitPlatform()
}

mainClassName = "com.kota.campaigns.service.Application"
java {
    sourceCompatibility = JavaVersion.toVersion('14')
    targetCompatibility = JavaVersion.toVersion('14')
}
tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}
tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}
tasks.withType(JavaExec) {
    jvmArgs += "--enable-preview"
}
nativeImage {
    args('--verbose')
    imageName('campaigns-data-svc')
}

spotless {
    java {
        googleJavaFormat()
    }
}

run {
    environment 'GOOGLE_APPLICATION_CREDENTIALS', file('campaigns-434f0-7976fe04aed5.json')
}



